sap.ui.define(["sap/ui/core/mvc/Controller"],e=>{"use strict";return e.extend("project1.controller.App",{onInit(){let e=sap.ui.core.UIComponent.getRouterFor(this);e.attachRouteMatched(this.onRouteMatched,this);this.loadStaticDropdownModel()},onMenuButtonPress:function(){const e=this.byId("sideNavigation"),t=e.getExpanded();e.setExpanded(!t)},getBundleText:function(e,t){return this.getBundleTextByModel(e,this.getOwnerComponent().getModel("i18n"),t)},onNavItemSelect:function(e){const t=e.getParameter("item");const o=t.getKey();const n=[{key:"Home",menuPath:"RouteLanding"},{key:"Search",menuPath:"RouteADMobility"},{key:"Visual",menuPath:"RouteServiceTest"},{key:"Open Service Request",menuPath:"RouteOpenService"},{key:"PendingPayment",menuPath:"path3"},{key:"Sales Order",menuPath:"RouteSalesOrder"}];const r=n.find(e=>e.key===o);if(r&&r.menuPath){const e=this.getOwnerComponent().getRouter();e.navTo(r.menuPath)}else{console.error("No navigation path found for key:",o)}},onPressLogOut:function(){const e=this.getOwnerComponent().getRouter();e.navTo("RouteLogin")},loadStaticDropdownModel:function(){try{const e=new sap.ui.model.json.JSONModel({menu:false,notification:false,logout:false,sideExpanded:false,badge:"2"});this.getView().setModel(e,"shellBarModel");console.log("Static Dropdown Model initialized:",e.getData())}catch(e){console.error("Error initializing dropdown model:",e)}},onRouteMatched:function(e){try{const t=e.getParameter("name");const o=window.location.hash;console.log({sHash:o,sRouteName:t});if(t==="RouteLogin"){this.handleRouteLoginMenu()}else if(t==="RouteLanding"){this.handleRouteLandingMenu()}else{this.handleNotificationAndLogout()}}catch(e){console.log("onRouteMatched Error :",e)}},handleRouteLoginMenu:function(){try{const e=this.getView().getModel("shellBarModel");e.setProperty(`/menu`,false);e.setProperty(`/notification`,false);e.setProperty(`/logout`,false);e.setProperty(`/badge`,"0");e.refresh()}catch(e){console.log("handleRouteLoginMenu Error :",e)}},handleRouteLoginMenu:function(){try{const e=this.getView().getModel("shellBarModel");e.setProperty(`/menu`,false);e.setProperty(`/notification`,false);e.setProperty(`/logout`,false);e.setProperty(`/badge`,"0");e.refresh()}catch(e){console.log("handleRouteLoginMenu Error :",e)}},handleRouteLandingMenu:async function(){try{let e=this.getView().getModel("shellBarModel");e.setProperty("/menu",true);e.setProperty("/notification",true);e.setProperty("/logout",true);e.setProperty(`/badge`,"0");e.refresh()}catch(e){console.log("handleRouteLandingMenu Error :",e)}},handleNotificationAndLogout:function(){try{const e=this.getView().getModel("shellBarModel");e.setProperty(`/menu`,false);e.setProperty(`/notification`,true);e.setProperty(`/logout`,true);e.setProperty(`/badge`,"0");e.refresh()}catch(e){console.log("handleNotificationAndLogout Error :",e)}}})});
//# sourceMappingURL=App.controller.js.map